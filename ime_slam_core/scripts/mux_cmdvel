#!/usr/bin/env python
#
# Pioneer3AT cmd_vel smart-mux
#  
#   Copyright Dereck Wonnacott [2013]
#

import rospy

from geometry_msgs.msg import Twist

    
def teleop_cmdCB(msg):
    global previous_teleop_msg
    global previous_teleop_msg_time

    previous_teleop_msg = msg 
    previous_teleop_msg_time = rospy.get_time()   
    
    
def nav_cmdCB(msg):
    global previous_nav_msg
    global previous_nav_msg_time

    previous_nav_msg = msg 
    previous_nav_msg_time = rospy.get_time()
    
    
if __name__ == '__main__':
    global previous_teleop_msg
    global previous_teleop_msg_time
    global previous_nav_msg
    global previous_nav_msg_time

    previous_teleop_msg       = Twist()
    previous_teleop_msg_time  = 0.0
    previous_nav_msg          = Twist()
    previous_nav_msg_time     = 0.0

    rospy.init_node('cmd_vel_mux')
    
    max_msg_latency           = 0.5    # Seconds
    msg_deadband              = 0.001  # m/s
        
    rospy.Subscriber("/teleop/cmd_vel"   , Twist, teleop_cmdCB)       
    rospy.Subscriber("/move_base/cmd_vel", Twist, nav_cmdCB)
    
    cmd_vel_pub = rospy.Publisher("/cmd_vel", Twist)

    
    r = rospy.Rate(10) # Hz
    while not rospy.is_shutdown():
        r.sleep()
        
        # Clear any stale messages
        msg_delay = rospy.get_time() - previous_teleop_msg_time
        if (msg_delay > max_msg_latency):
            previous_teleop_msg = Twist()
          
        if (rospy.get_time() - previous_nav_msg_time > max_msg_latency):
            previous_nav_msg = Twist()
        
        # Override the navigation commands with the teleop commands
        msg = previous_nav_msg
        if (abs(previous_teleop_msg.linear.x)  > msg_deadband 
        or  abs(previous_teleop_msg.angular.z) > msg_deadband):
          msg = previous_teleop_msg
        
        # Publish the selected message
        cmd_vel_pub.publish(msg)
  
  
  
  
  
  

